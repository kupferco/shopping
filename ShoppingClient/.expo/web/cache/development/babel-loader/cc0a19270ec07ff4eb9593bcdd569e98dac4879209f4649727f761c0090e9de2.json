{"ast":null,"code":"import React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Webcam from 'react-webcam';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebCameraCapture = function WebCameraCapture(_ref) {\n  var onCapture = _ref.onCapture;\n  var webcamRef = useRef(null);\n  var flashOpacity = useRef(new Animated.Value(0)).current;\n  var captureImage = function captureImage() {\n    console.log(432423);\n    if (webcamRef.current) {\n      var imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        Animated.sequence([Animated.timing(flashOpacity, {\n          toValue: 0.7,\n          duration: 100,\n          useNativeDriver: true\n        }), Animated.timing(flashOpacity, {\n          toValue: 0,\n          duration: 100,\n          useNativeDriver: true\n        })]).start();\n        setTimeout(function () {\n          onCapture(imageSrc);\n        }, 100);\n      }\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        facingMode: \"environment\",\n        width: {\n          ideal: Dimensions.get('window').height\n        },\n        height: {\n          ideal: Dimensions.get('window').width\n        }\n      },\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.fullScreenTouchable,\n      onPress: captureImage,\n      activeOpacity: 1\n    }), _jsx(Animated.View, {\n      style: [styles.flashOverlay, {\n        opacity: flashOpacity\n      }]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  fullScreenTouchable: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 10\n  },\n  flashOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white',\n    zIndex: 20\n  }\n});\nexport default WebCameraCapture;","map":{"version":3,"names":["React","useRef","View","TouchableOpacity","Animated","StyleSheet","Dimensions","Webcam","jsx","_jsx","jsxs","_jsxs","WebCameraCapture","_ref","onCapture","webcamRef","flashOpacity","Value","current","captureImage","console","log","imageSrc","getScreenshot","sequence","timing","toValue","duration","useNativeDriver","start","setTimeout","style","styles","container","children","audio","ref","screenshotFormat","videoConstraints","facingMode","width","ideal","get","height","objectFit","fullScreenTouchable","onPress","activeOpacity","flashOverlay","opacity","create","flex","justifyContent","alignItems","overflow","position","top","left","right","bottom","zIndex","backgroundColor"],"sources":["/Users/dankupfer/Documents/dev/shopping/shopping/ShoppingClient/src/components/WebCameraCapture.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { View, TouchableOpacity, Animated, StyleSheet, Dimensions } from 'react-native';\nimport Webcam from 'react-webcam';\n\ninterface WebCameraCaptureProps {\n  onCapture: (image: string) => void;\n}\n\nconst WebCameraCapture: React.FC<WebCameraCaptureProps> = ({ onCapture }) => {\n  const webcamRef = useRef<Webcam>(null);\n  const flashOpacity = useRef(new Animated.Value(0)).current;\n\n  const captureImage = () => {\n    console.log(432423)\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        // Trigger flash animation\n        Animated.sequence([\n          Animated.timing(flashOpacity, {\n            toValue: 0.7,  // Reduced opacity to keep camera visible\n            duration: 100,\n            useNativeDriver: true\n          }),\n          Animated.timing(flashOpacity, {\n            toValue: 0,\n            duration: 100,\n            useNativeDriver: true\n          })\n        ]).start();\n\n        // Delay capture callback to allow flash to be visible\n        setTimeout(() => {\n          onCapture(imageSrc);\n        }, 100);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={{\n          facingMode: \"environment\",\n          width: { ideal: Dimensions.get('window').height },\n          height: { ideal: Dimensions.get('window').width }\n        }}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover' as any,\n        }}\n      />\n      <TouchableOpacity \n        style={styles.fullScreenTouchable} \n        onPress={captureImage}\n        activeOpacity={1}\n      />\n      \n      <Animated.View \n        style={[\n          styles.flashOverlay, \n          { \n            opacity: flashOpacity,\n          }\n        ]} \n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  fullScreenTouchable: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 10,\n  },\n  flashOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white',\n    zIndex: 20,\n  },\n});\n\nexport default WebCameraCapture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}