{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Webcam from 'react-webcam';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebCameraCapture = function WebCameraCapture(_ref) {\n  var onCapture = _ref.onCapture;\n  var webcamRef = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCaptured = _useState2[0],\n    setIsCaptured = _useState2[1];\n  var captureImage = function captureImage() {\n    if (webcamRef.current) {\n      var imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        onCapture(imageSrc);\n        setIsCaptured(true);\n      }\n    }\n  };\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        facingMode: \"environment\",\n        width: {\n          ideal: height\n        },\n        height: {\n          ideal: width\n        }\n      },\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.captureButton,\n      onPress: captureImage,\n      children: _jsx(Text, {\n        style: styles.captureButtonText,\n        children: \"Capture\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  captureButton: {\n    position: 'absolute',\n    bottom: 20,\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 5,\n    zIndex: 10\n  },\n  captureButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default WebCameraCapture;","map":{"version":3,"names":["React","useRef","useState","View","TouchableOpacity","Text","StyleSheet","Dimensions","Webcam","jsx","_jsx","jsxs","_jsxs","WebCameraCapture","_ref","onCapture","webcamRef","_useState","_useState2","_slicedToArray","isCaptured","setIsCaptured","captureImage","current","imageSrc","getScreenshot","_Dimensions$get","get","width","height","style","styles","container","children","audio","ref","screenshotFormat","videoConstraints","facingMode","ideal","objectFit","captureButton","onPress","captureButtonText","create","flex","justifyContent","alignItems","overflow","position","bottom","backgroundColor","padding","borderRadius","zIndex","color","fontWeight"],"sources":["/Users/dankupfer/Documents/dev/shopping/shopping/ShoppingClient/src/components/WebCameraCapture.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { View, TouchableOpacity, Text, StyleSheet, Dimensions } from 'react-native';\nimport Webcam from 'react-webcam';\n\ninterface WebCameraCaptureProps {\n  onCapture: (image: string) => void;\n}\n\nconst WebCameraCapture: React.FC<WebCameraCaptureProps> = ({ onCapture }) => {\n  const webcamRef = useRef<Webcam>(null);\n  const [isCaptured, setIsCaptured] = useState(false);\n\n  const captureImage = () => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        onCapture(imageSrc);\n        setIsCaptured(true);\n      }\n    }\n  };\n\n  // Get device dimensions\n  const { width, height } = Dimensions.get('window');\n\n  return (\n    <View style={styles.container}>\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        videoConstraints={{\n          facingMode: \"environment\",\n          width: { ideal: height },\n          height: { ideal: width }\n        }}\n        style={{\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover' as any,\n        }}\n      />\n      <TouchableOpacity \n        style={styles.captureButton} \n        onPress={captureImage}\n      >\n        <Text style={styles.captureButtonText}>Capture</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  captureButton: {\n    position: 'absolute',\n    bottom: 20,\n    backgroundColor: '#2196F3',\n    padding: 10,\n    borderRadius: 5,\n    zIndex: 10,\n  },\n  captureButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default WebCameraCapture;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEhD,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAMlC,IAAMC,gBAAiD,GAAG,SAApDA,gBAAiDA,CAAAC,IAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;EACpE,IAAMC,SAAS,GAAGf,MAAM,CAAS,IAAI,CAAC;EACtC,IAAAgB,SAAA,GAAoCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIN,SAAS,CAACO,OAAO,EAAE;MACrB,IAAMC,QAAQ,GAAGR,SAAS,CAACO,OAAO,CAACE,aAAa,CAAC,CAAC;MAClD,IAAID,QAAQ,EAAE;QACZT,SAAS,CAACS,QAAQ,CAAC;QACnBH,aAAa,CAAC,IAAI,CAAC;MACrB;IACF;EACF,CAAC;EAGD,IAAAK,eAAA,GAA0BnB,UAAU,CAACoB,GAAG,CAAC,QAAQ,CAAC;IAA1CC,KAAK,GAAAF,eAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;EAErB,OACEjB,KAAA,CAACT,IAAI;IAAC2B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BvB,IAAA,CAACF,MAAM;MACL0B,KAAK,EAAE,KAAM;MACbC,GAAG,EAAEnB,SAAU;MACfoB,gBAAgB,EAAC,YAAY;MAC7BC,gBAAgB,EAAE;QAChBC,UAAU,EAAE,aAAa;QACzBV,KAAK,EAAE;UAAEW,KAAK,EAAEV;QAAO,CAAC;QACxBA,MAAM,EAAE;UAAEU,KAAK,EAAEX;QAAM;MACzB,CAAE;MACFE,KAAK,EAAE;QACLF,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdW,SAAS,EAAE;MACb;IAAE,CACH,CAAC,EACF9B,IAAA,CAACN,gBAAgB;MACf0B,KAAK,EAAEC,MAAM,CAACU,aAAc;MAC5BC,OAAO,EAAEpB,YAAa;MAAAW,QAAA,EAEtBvB,IAAA,CAACL,IAAI;QAACyB,KAAK,EAAEC,MAAM,CAACY,iBAAkB;QAAAV,QAAA,EAAC;MAAO,CAAM;IAAC,CACrC,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGzB,UAAU,CAACsC,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACDP,aAAa,EAAE;IACbQ,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAE;EACV,CAAC;EACDX,iBAAiB,EAAE;IACjBY,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe3C,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}