{"ast":null,"code":"import React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Webcam from 'react-webcam';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WebCameraCapture = function WebCameraCapture(_ref) {\n  var onCapture = _ref.onCapture;\n  var webcamRef = useRef(null);\n  var flashOpacity = useRef(new Animated.Value(0)).current;\n  var captureImage = function captureImage() {\n    if (webcamRef.current) {\n      var imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        Animated.sequence([Animated.timing(flashOpacity, {\n          toValue: 0.7,\n          duration: 100,\n          useNativeDriver: true\n        }), Animated.timing(flashOpacity, {\n          toValue: 0,\n          duration: 100,\n          useNativeDriver: true\n        })]).start();\n        setTimeout(function () {\n          onCapture(imageSrc);\n        }, 100);\n      }\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: captureImage,\n      children: _jsx(View, {\n        style: styles.cameraContainer,\n        children: _jsx(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: {\n            facingMode: \"environment\",\n            width: {\n              ideal: Dimensions.get('window').height\n            },\n            height: {\n              ideal: Dimensions.get('window').width\n            }\n          },\n          style: styles.webcam\n        })\n      })\n    }), _jsx(Animated.View, {\n      style: [styles.flashOverlay, {\n        opacity: flashOpacity\n      }]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative'\n  },\n  cameraContainer: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  webcam: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  },\n  flashOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white',\n    zIndex: 10\n  }\n});\nexport default WebCameraCapture;","map":{"version":3,"names":["React","useRef","View","TouchableWithoutFeedback","Animated","StyleSheet","Dimensions","Webcam","jsx","_jsx","jsxs","_jsxs","WebCameraCapture","_ref","onCapture","webcamRef","flashOpacity","Value","current","captureImage","imageSrc","getScreenshot","sequence","timing","toValue","duration","useNativeDriver","start","setTimeout","style","styles","container","children","onPress","cameraContainer","audio","ref","screenshotFormat","videoConstraints","facingMode","width","ideal","get","height","webcam","flashOverlay","opacity","create","flex","position","overflow","objectFit","top","left","right","bottom","backgroundColor","zIndex"],"sources":["/Users/dankupfer/Documents/dev/shopping/shopping/ShoppingClient/src/components/WebCameraCapture.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { View, TouchableWithoutFeedback, Animated, StyleSheet, Dimensions } from 'react-native';\nimport Webcam from 'react-webcam';\n\ninterface WebCameraCaptureProps {\n  onCapture: (image: string) => void;\n}\n\nconst WebCameraCapture: React.FC<WebCameraCaptureProps> = ({ onCapture }) => {\n  const webcamRef = useRef<Webcam>(null);\n  const flashOpacity = useRef(new Animated.Value(0)).current;\n\n  const captureImage = () => {\n    if (webcamRef.current) {\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        // Trigger flash animation\n        Animated.sequence([\n          Animated.timing(flashOpacity, {\n            toValue: 0.7,  // Reduced opacity to keep camera visible\n            duration: 100,\n            useNativeDriver: true\n          }),\n          Animated.timing(flashOpacity, {\n            toValue: 0,\n            duration: 100,\n            useNativeDriver: true\n          })\n        ]).start();\n\n        // Delay capture callback to allow flash to be visible\n        setTimeout(() => {\n          onCapture(imageSrc);\n        }, 100);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableWithoutFeedback onPress={captureImage}>\n        <View style={styles.cameraContainer}>\n          <Webcam\n            audio={false}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={{\n              facingMode: \"environment\",\n              width: { ideal: Dimensions.get('window').height },\n              height: { ideal: Dimensions.get('window').width }\n            }}\n            style={styles.webcam}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      \n      <Animated.View \n        style={[\n          styles.flashOverlay, \n          { \n            opacity: flashOpacity,\n          }\n        ]} \n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  },\n  cameraContainer: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  webcam: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover' as any,\n  },\n  flashOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'white',\n    zIndex: 10,\n  },\n});\n\nexport default WebCameraCapture;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}